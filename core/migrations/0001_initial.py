# Generated by Django 5.2.4 on 2025-07-30 11:39

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='DemandeAcces',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_complet', models.CharField(max_length=150)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('role_souhaite', models.CharField(max_length=100)),
                ('message', models.TextField(blank=True, null=True)),
                ('est_traitee', models.BooleanField(default=False)),
                ('date_demande', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Groupe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_groupe', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Groupe',
                'verbose_name_plural': 'Groupes',
                'ordering': ['nom_groupe'],
            },
        ),
        migrations.CreateModel(
            name='Membre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('prenom', models.CharField(max_length=100)),
                ('date_naissance', models.DateField()),
                ('adresse', models.TextField()),
                ('telephone', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{9,15}$', 'Numéro de téléphone invalide')])),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('sexe', models.CharField(blank=True, choices=[('M', 'Masculin'), ('F', 'Féminin')], max_length=1, null=True, verbose_name='Sexe')),
                ('statut_baptismal', models.CharField(choices=[('baptise_eglise', 'Baptisé Église'), ('non_baptise', 'Non Baptisé'), ('baptise_autre_eglise', 'Baptisé Autre Église')], default='non_baptise', max_length=25)),
                ('date_adhesion', models.DateField()),
                ('photo_profil_url', models.URLField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Membre',
                'verbose_name_plural': 'Membres',
                'ordering': ['nom', 'prenom'],
            },
        ),
        migrations.CreateModel(
            name='ProgrammeEglise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('date_debut', models.DateTimeField()),
                ('date_fin', models.DateTimeField()),
                ('lieu', models.CharField(max_length=200)),
                ('categorie', models.CharField(choices=[('culte', 'Culte'), ('reunion_priere', 'Réunion de prière'), ('etude_biblique', 'Étude biblique'), ('evenement_special', 'Événement spécial'), ('formation', 'Formation'), ('jeunesse', 'Jeunesse'), ('enfants', 'Enfants')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': "Programme d'Église",
                'verbose_name_plural': "Programmes d'Église",
                'ordering': ['-date_debut'],
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_role', models.CharField(choices=[('pasteur', 'Pasteur'), ('diacre', 'Diacre'), ('protocole', 'Protocole'), ('evangeliste', 'Évangéliste'), ('membre_standard', 'Membre Standard'), ('administrateur', 'Administrateur'), ('tresorier', 'Trésorier'), ('coordinateur_programme', 'Coordinateur de Programme')], max_length=50, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Rôle',
                'verbose_name_plural': 'Rôles',
                'ordering': ['nom_role'],
            },
        ),
        migrations.CreateModel(
            name='DonMateriel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description_objet', models.TextField()),
                ('valeur_estimee', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('date_don', models.DateTimeField()),
                ('statut_don', models.CharField(choices=[('recu', 'Reçu'), ('utilise', 'Utilisé'), ('en_attente', 'En attente')], default='recu', max_length=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('membre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dons_materiels', to='core.membre')),
            ],
            options={
                'verbose_name': 'Don Matériel',
                'verbose_name_plural': 'Dons Matériels',
                'ordering': ['-date_don'],
            },
        ),
        migrations.CreateModel(
            name='Couple',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statut_couple', models.CharField(choices=[('marie', 'Marié'), ('fiance', 'Fiancé')], max_length=10)),
                ('date_mariage', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('membre_femme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='couples_femme', to='core.membre')),
                ('membre_mari', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='couples_mari', to='core.membre')),
            ],
            options={
                'verbose_name': 'Couple',
                'verbose_name_plural': 'Couples',
                'unique_together': {('membre_mari', 'membre_femme')},
            },
        ),
        migrations.CreateModel(
            name='CompteUtilisateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_active', models.BooleanField(default=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('membre', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='compte_utilisateur', to='core.membre')),
            ],
            options={
                'verbose_name': 'Compte Utilisateur',
                'verbose_name_plural': 'Comptes Utilisateurs',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='MembreGroupe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groupe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.groupe')),
                ('membre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.membre')),
            ],
            options={
                'verbose_name': 'Appartenance au Groupe',
                'verbose_name_plural': 'Appartenances aux Groupes',
                'unique_together': {('membre', 'groupe')},
            },
        ),
        migrations.AddField(
            model_name='groupe',
            name='membres',
            field=models.ManyToManyField(related_name='groupes', through='core.MembreGroupe', to='core.membre'),
        ),
        migrations.CreateModel(
            name='ProgrammeMariage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('date_debut', models.DateTimeField()),
                ('date_fin', models.DateTimeField()),
                ('lieu', models.CharField(blank=True, max_length=200, null=True)),
                ('statut', models.CharField(choices=[('planifie', 'Planifié'), ('en_cours', 'En cours'), ('termine', 'Terminé'), ('annule', 'Annulé')], default='planifie', max_length=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('couple', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='programmes_mariage', to='core.couple')),
            ],
            options={
                'verbose_name': 'Programme de Mariage',
                'verbose_name_plural': 'Programmes de Mariage',
                'ordering': ['-date_debut'],
            },
        ),
        migrations.CreateModel(
            name='TransactionFinanciere',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_transaction', models.CharField(choices=[('offrande', 'Offrande'), ('don', 'Don'), ('depense', 'Dépense')], max_length=10)),
                ('montant', models.DecimalField(decimal_places=2, max_digits=10)),
                ('date_transaction', models.DateTimeField()),
                ('description', models.TextField(blank=True, null=True)),
                ('categorie_depense', models.CharField(blank=True, choices=[('loyer', 'Loyer'), ('salaires', 'Salaires'), ('materiel', 'Matériel'), ('oeuvres_sociales', 'Œuvres sociales'), ('entretien', 'Entretien'), ('electricite', 'Électricité'), ('eau', 'Eau'), ('autres', 'Autres')], max_length=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('membre', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transactions', to='core.membre')),
            ],
            options={
                'verbose_name': 'Transaction Financière',
                'verbose_name_plural': 'Transactions Financières',
                'ordering': ['-date_transaction'],
            },
        ),
        migrations.CreateModel(
            name='MembreRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('membre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='membre_roles', to='core.membre')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='membre_roles', to='core.role')),
            ],
            options={
                'verbose_name': 'Attribution de Rôle',
                'verbose_name_plural': 'Attributions de Rôles',
                'unique_together': {('membre', 'role')},
            },
        ),
    ]
